<launch>

	<arg name="model" default="$(find lama_test)/worlds/stage-270.world" />

	<!-- costmap == true => local_map + nj_costmap; costmap == false => nj_laser -->
	<arg name="costmap" default="true" />

	<!-- Launch nj_costmap if launch_explorer is true, don't launch it otherwise. -->
	<arg name="launch_explorer" default="true" />

    <!-- Save everything as rosbag? -->
	<arg name="record" default="false" />

	<arg name="max_frontier_angle" default="1.3" />
    <arg name="frontier_width" default="0.5" />
	<arg name="range_cutoff" default="0" />

    <arg name="min_linear_velocity" value="0.1" />
    <arg name="max_linear_velocity" value="1" />
    <arg name="min_angular_velocity" value="0.1" />
    <arg name="max_angular_velocity" value="2" />

	<!-- END OF THE CONFIGURATION PART -->

	<include file="$(find lama_interfaces)/launch/init_lama.launch" />

	<group if="$(arg record)" >
		<node name="rosbag" pkg="rosbag" type="record"
			args="-a -o lama_test" />
	</group>

	<node name="stage" pkg="stage_ros" type="stageros"
			args="$(arg model)" />

	<param name="use_sim_time" value="true" />

	<node name="rviz" pkg="rviz" type="rviz"
			args="-d $(find lama_test)/worlds/dfs_explorer.rviz" />

	<group if="$(arg costmap)">
		<remap from="costmap/scan" to="/base_scan" />
		<remap from="navigating_jockey/local_costmap" to="/costmap/local_map" />
		<remap from="navigating_jockey/cmd_vel" to="/cmd_vel" />
		<remap from="navigating_jockey/base_scan" to="/base_scan" />
        <remap from="localizing_jockey/local_costmap" to="/costmap/local_map" />

		<node name="costmap" pkg="local_map" type="local_map"
				output="screen" launch-prefix="">
			<param name="map_width" value="200" />
			<param name="map_height" value="200" />
			<param name="map_resolution" value="0.02" />
		</node>

		<!--
		  rosrun nj_costmap nj_costmap __name:=nj_costmap \
		  _navigating_jockey_server_name:=/navigating_jockey_server \
		  _odom_frame:=base_link \
		  _frontier_width:=0.5 \
		  _kp_v:=0.05 \
		  _kp_w:=0.1 \
		  _ki_v:=0 \
		  _ki_w:=0 \
		  _min_linear_velocity:=0 \
		  _min_angular_velocity:=0 \
		  navigating_jockey/local_costmap:=/costmap/local_map \
		  navigating_jockey/cmd_vel:=/cmd_vel \
		  navigating_jockey/base_scan:=/base_scan
		-->
		<node name="navigating_jockey" pkg="nj_costmap" type="nj_costmap"
				output="screen" >
			<param name="navigating_jockey_server_name" value="/navigating_jockey_server" />
			<param name="odom_frame" value="base_link" />
			<param name="frontier_width" value="$(arg frontier_width)" />
			<param name="kp_v" value="0.1" />
			<param name="kp_w" value="1" />
			<param name="ki_v" value="0" />
			<param name="ki_w" value="0" />
			<param name="min_linear_velocity" value="$(arg min_linear_velocity)" />
            <param name="min_angular_velocity" value="$(arg min_angular_velocity)" />
			<param name="dtheta_force_left" value="0.17" />
			<param name="robot_radius" value="0.3" />
			<param name="range_cutoff" value="$(arg range_cutoff)" />
		</node>

		<node name="localizing_jockey" pkg="lj_costmap" type="lj_costmap"
				output="screen" >
			<param name="crossing_interface_name" value="/localizing_jockey_server_crossing_descriptor" />
            <param name="frontier_width" value="$(arg frontier_width)" />
			<param name="range_cutoff" value="$(arg range_cutoff)" />
			<param name="max_frontier_angle" value ="$(arg max_frontier_angle)" />
			<param name="dissimilarity_server_name" value="/dissimilarity_server/compute_dissimilarity" />
		</node>
	</group>

	<group unless="$(arg costmap)" >
		<remap from="navigating_jockey/cmd_vel" to="/cmd_vel" />
		<remap from="navigating_jockey/base_scan" to="/base_scan" />
		<remap from="localizing_jockey/odom" to="/odom" />

		<node name="navigating_jockey" pkg="nj_laser" type="nj_laser"
				output="screen">
			<param name="navigating_jockey_server_name" value="/navigating_jockey_server" />
            <param name="frontier_width" value="$(arg frontier_width)" />
			<param name="kp_v" value="0.05" />
			<param name="kp_w" value="0.1" />
			<param name="ki_v" value="0" />
			<param name="ki_w" value="0" />
            <param name="min_linear_velocity" value="$(arg min_linear_velocity)" />
            <param name="min_angular_velocity" value="$(arg min_angular_velocity)" />
            <param name="range_cutoff" value="$(arg range_cutoff)" />
			<param name="max_frontier_angle" value ="$(arg max_frontier_angle)" />
		</node>

		<node name="localizing_jockey" pkg="lj_laser_heading" type="lj_laser_heading"
				output="screen" >
            <param name="frontier_width" value="$(arg frontier_width)" />
            <param name="range_cutoff" value="$(arg range_cutoff)" />
			<param name="max_frontier_angle" value ="$(arg max_frontier_angle)" />
			<param name="dissimilarity_server_name" value="/dissimilarity_server/compute_dissimilarity" />
		</node>
	</group>

	<node name="crossing_escaper" pkg="nj_escape_crossing" type="nj_escape_crossing"
			output="screen" >
		<param name="kp_v" value="0.05" />
		<param name="kp_w" value="0.5" />
        <param name="min_linear_velocity" value="$(arg min_linear_velocity)" />
        <param name="min_angular_velocity" value="$(arg min_angular_velocity)" />
		<param name="crossing_interface_name" value="/localizing_jockey_server_crossing_descriptor" />
		<param name="exit_angle_interface_name" value="dfs_explorer_exit_angle" />
		<remap from="crossing_escaper/odometry" to="/odom" />
		<remap from="crossing_escaper/cmd_vel" to="/cmd_vel" />
		<remap from="crossing_escaper/exit_angle" to="/explorer/exit_angle" />
	</node>

	<node name="dissimilarity_server" pkg="pm_mcc" type="pm_mcc" 
			output="screen" >
	</node>
	
	<group if="$(arg launch_explorer)">
		<node name="explorer" pkg="dfs_explorer" type="explorer.py"
				output="screen">
			<param name="navigating_jockey_name" value="/navigating_jockey_server" />
			<param name="localizing_jockey_name" value="/localizing_jockey_server" />
			<param name="escape_jockey_name" value="/crossing_escaper_jockey" />
			<param name="crossing_interface" value="/localizing_jockey_server_crossing_descriptor" />
			<param name="dissimilarity_threshold" value="0.045" />
		</node>
	</group>

</launch>
